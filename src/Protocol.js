// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Raw$RescriptMpst from "rescript-mpst/src/Raw.js";
import * as Mpst$RescriptMpst from "rescript-mpst/src/Mpst.js";

function lens_a_get(param) {
  return param[0];
}

function lens_a_put(param, a) {
  return [
          a,
          param[1],
          param[2]
        ];
}

var lens_a = {
  get: lens_a_get,
  put: lens_a_put
};

function lens_b_get(param) {
  return param[1];
}

function lens_b_put(param, b) {
  return [
          param[0],
          b,
          param[2]
        ];
}

var lens_b = {
  get: lens_b_get,
  put: lens_b_put
};

function lens_c_get(param) {
  return param[2];
}

function lens_c_put(param, c) {
  return [
          param[0],
          param[1],
          c
        ];
}

var lens_c = {
  get: lens_c_get,
  put: lens_c_put
};

var main_role_label = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "Main",
              VAL: v
            };
    })
};

var main = {
  role_label: main_role_label,
  role_lens: lens_a
};

var webwork_role_label = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "Webwork",
              VAL: v
            };
    })
};

var webwork = {
  role_label: webwork_role_label,
  role_lens: lens_b
};

var carol_role_label = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "Carol",
              VAL: v
            };
    })
};

var carol = {
  role_label: carol_role_label,
  role_lens: lens_c
};

var hello_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "hello",
              VAL: v
            };
    })
};

function hello_label_open(v) {
  return {
          NAME: "hello",
          VAL: v
        };
}

var hello = {
  label_closed: hello_label_closed,
  label_open: hello_label_open
};

var goodbye_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "goodbye",
              VAL: v
            };
    })
};

function goodbye_label_open(v) {
  return {
          NAME: "goodbye",
          VAL: v
        };
}

var goodbye = {
  label_closed: goodbye_label_closed,
  label_open: goodbye_label_open
};

function hello_or_goodbye_concat(l, r) {
  return {
          hd: {
            NAME: "hello",
            VAL: Mpst$RescriptMpst.list_match((function (param) {
                    return param.VAL;
                  }), l)
          },
          tl: {
            hd: {
              NAME: "goodbye",
              VAL: Mpst$RescriptMpst.list_match((function (param) {
                      return param.VAL;
                    }), r)
            },
            tl: /* [] */0
          }
        };
}

function hello_or_goodbye_split(lr) {
  return [
          {
            hd: {
              NAME: "hello",
              VAL: Mpst$RescriptMpst.list_match((function (x) {
                      if (x.NAME === "hello") {
                        return x.VAL;
                      } else {
                        return Raw$RescriptMpst.dontknow(undefined);
                      }
                    }), lr)
            },
            tl: /* [] */0
          },
          {
            hd: {
              NAME: "goodbye",
              VAL: Mpst$RescriptMpst.list_match((function (x) {
                      if (x.NAME === "hello") {
                        return Raw$RescriptMpst.dontknow(undefined);
                      } else {
                        return x.VAL;
                      }
                    }), lr)
            },
            tl: /* [] */0
          }
        ];
}

var hello_or_goodbye = {
  concat: hello_or_goodbye_concat,
  split: hello_or_goodbye_split
};

var g = Mpst$RescriptMpst.$neg$neg$great(main, webwork, hello, Mpst$RescriptMpst.$neg$neg$great(webwork, main, goodbye, Mpst$RescriptMpst.finish));

export {
  lens_a ,
  lens_b ,
  lens_c ,
  main ,
  webwork ,
  carol ,
  hello ,
  goodbye ,
  hello_or_goodbye ,
  g ,
  
}
/* g Not a pure module */
