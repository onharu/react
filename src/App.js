// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import LogoSvg from "./logo.svg";
import * as Pervasives from "rescript/lib/es6/pervasives.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Mpst$RescriptMpst from "rescript-mpst/src/Mpst.js";
import * as MpstWorker$RescriptMpst from "rescript-mpst/src/MpstWorker.js";
import * as Protocol$RescriptReactIntro from "./Protocol.js";

import './App.css';
import MyThread from "./mythread.worker.js";
;

function unsafeUnwrap(e) {
  if (e !== undefined) {
    return Caml_option.valFromOption(e);
  } else {
    return Pervasives.failwith("error!");
  }
}

function transform(param) {
  var txtelt = document.getElementById("txt");
  var text = Belt_Option.map(Belt_Option.map((txtelt == null) ? undefined : Caml_option.some(txtelt), (function (prim) {
              return prim;
            })), (function (prim) {
          return prim.value;
        }));
  var text$1 = Belt_Option.getExn(text);
  var content = document.getElementById("content");
  var content$1 = (content == null) ? undefined : Caml_option.some(content);
  var worker = (new MyThread());
  var ch = MpstWorker$RescriptMpst.MainSide.initWorkers(Protocol$RescriptReactIntro.g, Protocol$RescriptReactIntro.main, [[
          "Webwork",
          worker
        ]]);
  var ch$1 = Mpst$RescriptMpst.send(ch, (function (x) {
          return {
                  NAME: "Webwork",
                  VAL: x
                };
        }), (function (x) {
          return {
                  NAME: "hello",
                  VAL: x
                };
        }), text$1);
  Mpst$RescriptMpst.receive(ch$1, (function (x) {
            return {
                    NAME: "Webwork",
                    VAL: x
                  };
          })).then(function (param) {
        var match = param.VAL;
        var v = match[0];
        console.log("main: I got: " + v);
        Belt_Option.getExn(content$1).innerHTML = v;
        return Mpst$RescriptMpst.close(match[1]);
      });
  
}

var run = (() => {
  let worker = new MyThread();
  let f = e => {
    console.log("Worker から受け取ったもの:" + e["data"])
  };
  worker.onmessage = f;
  worker.postMessage("Hello, Worker!!!");
});

var logo = LogoSvg;

function hello(param) {
  console.log("hello, world!!");
  
}

function App(Props) {
  return React.createElement("div", {
              className: "App"
            }, React.createElement("textarea", {
                  id: "txt",
                  cols: 130,
                  rows: 25,
                  onKeyUp: transform
                }), React.createElement("div", {
                  id: "content"
                }));
}

var make = App;

var $$default = App;

export {
  unsafeUnwrap ,
  transform ,
  run ,
  logo ,
  hello ,
  make ,
  $$default ,
  $$default as default,
  
}
/*  Not a pure module */
